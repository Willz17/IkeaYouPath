const user_schema = require("../models/user");

/**
 * (TESTED)
 * @param {*} param0 - Name, email and password of user to register
 * @ID - generated by @randomUUID (crypto)
 * @returns
 */
const registerUser = async ({ name, email, password }) => {
  const user_obj = new user_schema({
    name: name,
    email: email,
  });
  user_obj.password = user_obj.generateHash(password);

  try {
    const user = await user_obj.save();
    return { user: user, code: 200 };
  } catch (e) {
    console.log(e);
    return { message: "Email already in use", code: 400 };
  }
};

/**
 * (TESTED)
 * (authenticate with (email and password))
 * @param {*} param0 - Email and password of user
 * @returns - User object on sucess, error object on error.
 */
const loginUser = async ({ email, password }) => {
  let res;
  await user_schema
    .findOne({ email: email }, function (err, user) {
      try {
        if (user.validatePassword(password)) {
          res = { user: user, code: 200 };
        } else {
          res = { message: "Wrong password", code: 400 };
        }
      } catch (e) {
        console.log("error", e);
        res = e;
      }
    })
    .clone();
  console.log("res", res);
  return res;
};

module.exports.registerUser = registerUser;
module.exports.loginUser = loginUser;
